Instruction set for Prancer VM

		00 INT #
1n LD Rn,#	01 B #
2n LD A,Rn	02 BZ #
3n LD Rn,A	03 BNZ #
4n LD A,(Rn)	04 BC #
5n LD (Rn),A	05 BNC #
6n LDB A,(Rn)	06
7n LDB (Rn),A	07
8n ADD Rn	08 SHL
9n SUB Rn	09 SHR
An CMP Rn	0A INV
Bn INC Rn	0B PUSH
Cn DEC Rn	0C POP
Dn AND Rn	0D RET
En OR Rn	0E CALL #
Fn XOR Rn	0F LD A,#

Registers use 16-bit values
Branches are relative from the next instruction after B
There is no long jump, but CALL works with absolute addresses
Flags are zero and carry
Most operations affecting A affect ZF
INC and DEC also affect ZF
POP and LD A,# do not affect ZF
ADD, SUB, CMP, INC, DEC, SHL and SHR affect CF
The stack expands from 0..$FF
SP is not accessible

